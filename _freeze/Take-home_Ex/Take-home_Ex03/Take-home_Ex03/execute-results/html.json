{
  "hash": "17b791eac40d37874c9602b8ee9fe473",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 3\"\nauthor: \"Immanuel Leong\"\ndate: \"September 20, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n\n# **Take-home Exercise 3: Prototyping Modules for Geospatial Analytics Shiny Application**\n\n## 1.0 Overview\n\nIn this exercise, I prototype the exploratory data analysis module of a Shiny application that allows users to investigate the spatial distribution and temporal trends of armed conflict events in Papua, a region of Indonesia that has been experiencing a protracted military conflict since 1962, between Indonesian security forces and separatist guerrilla groups under the umbrella of the Free Papua Movement.\n\nOur application covers the period from 1 January 2015, shortly after Indonesian President Joko Widodo (\"Jokowi\") began his first term, to 30 June 2024, towards the end of Jokowi's second term. It thus provides insights into how the Papua conflict has evolved over Jokowi's time in office.\n\n## 2.0 Packages\n\nFor this exercise, the following R packages are used:\n\n-   [**tidyverse**](https://cran.r-project.org/web/packages/tidyverse/index.html), a collection of R packages designed for data science, and which provides functions to import, transform, and visualise the data.\n\n-   [**sf**](https://cran.r-project.org/web/packages/sf/index.html), to import, manage and process vector-based geospatial data in R.\n\n-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html), which provides functions for plotting cartographic quality static point patterns maps or interactive maps.\n\n-   [**shiny**](https://cran.r-project.org/web/packages/shiny/index.html), which makes it easy to build interactive web applications with R.\n\nAll of these packages are supported in R CRAN.\n\n*p_load()* function of pacman package is used to install and load these packages into the R environment.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, shiny)\n```\n:::\n\n\n\n\n## 3.0 Data Preparation\n\nFor this exercise, we will need to prepare the following data layers:\n\n-   A study area layer in sf polygon feature format, at Indonesia's admin1 (provinsi/province) level.\n\n-   A study area layer in sf polygon feature format, at Indonesia's admin2 (kota & kabupaten/city & regency) level.\n\n-   A point events layer in sf point feature format, showing the location, date and other attributes of armed conflict events in the Papua region.\n\n### 3.1 Preparing the admin1 layer\n\n#### 3.1.1 Importing the data and checking the projection\n\nImport `idn_admbnda_adm1_bps_20200401` as a simple features object, which we name `admin1`. This dataset provides information on Indonesia's admin1 boundaries.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin1 <- st_read(dsn = \"data/adminboundaries\", layer = \"idn_admbnda_adm1_bps_20200401\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `idn_admbnda_adm1_bps_20200401' from data source \n  `C:\\ImmanuelLeong\\IS415-Geospatial\\Take-home_Ex\\Take-home_Ex03\\data\\adminboundaries' \n  using driver `ESRI Shapefile'\nSimple feature collection with 34 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 95.01079 ymin: -11.00762 xmax: 141.0194 ymax: 6.07693\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n\n`admin1` has a total of 34 features, and is projected in WGS 84.\n\nSometimes, when importing geospatial data into R, the coordinate system of the source data is wrongly assigned during the importing process. We check the CRS.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(admin1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n\n\nThe EPSG code indicated is 4326, which is correct since the data is projected in WGS 84.\n\n#### 3.1.2 Reprojecting the data\n\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\n\nIn the following code chunk, we reproject `admin1` in the DGN95 / UTM zone 53S project coordinate system, which has EPSG code 23883.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin1_23883 <- st_transform(admin1, crs = 23883)\n```\n:::\n\n\n\n\nUsing the following code chunk, we verify that we have successfully reprojected `admin1` in the the DGN95 / UTM zone 53S coordinate system.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(admin1_23883)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 34 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -4331262 ymin: 8755925 xmax: 1168187 ymax: 10875090\nProjected CRS: DGN95 / UTM zone 53S\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n\n\n#### 3.1.3 Selecting the study area\n\nAs mentioned earlier, our study area is the region of Papua. This currently consists of 6 provinces: Papua Selatan (South Papua), Papua Tengah (Central Papua), Papua Pegunungan (Mountains Papua), Papua Barat Daya (South-West Papua), Papua Barat (West Papua), and Papua.\n\nHowever, were only created in [2022](https://unstats.un.org/unsd/ungegn/sessions/3rd_session_2023/documents/GEGN.2_2023_50_CRP50.pdf), when they were carved out of the original 2 provinces of Papua and Papua Barat. Since the source data was last modified in [April 2020](https://data.humdata.org/dataset/cod-ab-idn?), this change has not been reflected, and `admin1_23883` only contains the geospatial data for the 2 original provinces in the Papua region, as well as provinces in the rest of Indonesia.\n\nAs most of the time period we are studying (1 January 2015 to 30 June 2024) falls before this change, to simplify our analysis, we can use this original data for the entire study period.\n\nHence, we use the *filter()* function of **dplyr**, part of the **tidyverse**, to extract the data for Papua and Papua Barat, and save it as a new sf data.frame `admin1_study`. The ADM1_EN field of `admin1_23883` contains the name of each province.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin1_study <- admin1_23883 %>%\n  filter(ADM1_EN == \"Papua\" | ADM1_EN == \"Papua Barat\")\n\nadmin1_study\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -134331.7 ymin: 8986310 xmax: 1168187 ymax: 10103660\nProjected CRS: DGN95 / UTM zone 53S\n  Shape_Leng Shape_Area     ADM1_EN ADM1_PCODE ADM1_REF ADM1ALT1EN ADM1ALT2EN\n1   63.86288  25.607715       Papua       ID94     <NA>       <NA>       <NA>\n2   74.47466   8.010799 Papua Barat       ID91     <NA>       <NA>       <NA>\n    ADM0_EN ADM0_PCODE       date    validOn    validTo\n1 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n2 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n                        geometry\n1 MULTIPOLYGON (((936916.9 90...\n2 MULTIPOLYGON (((267868.9 95...\n```\n\n\n:::\n:::\n\n\n\n\nAs required, `admin1_study` is a sf polygon data.frame. It has 2 features.\n\nWe verify that the geometries of both features in `admin1_study` are valid.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(which(st_is_valid(admin1_study) == TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\nWe visualise `admin1_study` using *plot()*. As expected, this depicts the original 2 provinces of Papua and Papua Barat\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(admin1_study)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can now save the `admin1_study` study area layer using the *write_rds()* function of **readr**, part of the **tidyverse**.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(admin1_study, \"data/rds/admin1_study.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n### 3.2 Preparing the admin2 layer\n\n#### 3.2.1 Importing the data and checking the projection\n\nImport `idn_admbnda_adm2_bps_20200401` as a simple features object, which we name `admin2`. This dataset provides information on Indonesia's admin2 boundaries.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin2 <- st_read(dsn = \"data/adminboundaries\", layer = \"idn_admbnda_adm2_bps_20200401\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `idn_admbnda_adm2_bps_20200401' from data source \n  `C:\\ImmanuelLeong\\IS415-Geospatial\\Take-home_Ex\\Take-home_Ex03\\data\\adminboundaries' \n  using driver `ESRI Shapefile'\nSimple feature collection with 522 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 95.01079 ymin: -11.00762 xmax: 141.0194 ymax: 6.07693\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n\n#### 3.2.2 Reprojecting the data\n\nAgain, the data is projected in WGS84, and we reproject it in the DGN95 / UTM zone 53S coordinate system.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin2_23883 <- st_transform(admin2, 23883)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(admin2_23883)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 522 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -4331262 ymin: 8755925 xmax: 1168187 ymax: 10875090\nProjected CRS: DGN95 / UTM zone 53S\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n\n\n#### 3.3.3 Selecting the study area\n\nSimilar to `admin1_23883`, the ADM1_EN field of `admin2_23883` contains the name of the province that each admin2 subdivision (city or regency) belonged to as of April 2020.\n\nWe use the *filter()* function of **dplyr**, part of the **tidyverse**, to extract the data for the admin2 subdivisions that belonged to Papua and Papua Barat, and save it as a new sf data.frame `admin2_study`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin2_study <- admin2_23883 %>%\n  filter(ADM1_EN == \"Papua\" | ADM1_EN == \"Papua Barat\")\n\nadmin2_study\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 42 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -134331.7 ymin: 8986310 xmax: 1168187 ymax: 10103660\nProjected CRS: DGN95 / UTM zone 53S\nFirst 10 features:\n   Shape_Leng Shape_Area      ADM2_EN ADM2_PCODE ADM2_REF ADM2ALT1EN ADM2ALT2EN\n1    7.478910  2.0417988        Asmat     ID9415     <NA>       <NA>       <NA>\n2    4.873627  0.1830028  Biak Numfor     ID9409     <NA>       <NA>       <NA>\n3    6.826722  1.9319841 Boven Digoel     ID9413     <NA>       <NA>       <NA>\n4    1.913528  0.1496381       Deiyai     ID9436     <NA>       <NA>       <NA>\n5    3.209777  0.3782397      Dogiyai     ID9434     <NA>       <NA>       <NA>\n6    9.412293  0.8938388       Fakfak     ID9101     <NA>       <NA>       <NA>\n7    3.696500  0.3771067   Intan Jaya     ID9435     <NA>       <NA>       <NA>\n8    7.551512  1.1672374     Jayapura     ID9403     <NA>       <NA>       <NA>\n9    2.998729  0.2147504   Jayawijaya     ID9402     <NA>       <NA>       <NA>\n10  16.871958  1.3150578      Kaimana     ID9102     <NA>       <NA>       <NA>\n       ADM1_EN ADM1_PCODE   ADM0_EN ADM0_PCODE       date    validOn    validTo\n1        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n2        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n3        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n4        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n5        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n6  Papua Barat       ID91 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n7        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n8        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n9        Papua       ID94 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n10 Papua Barat       ID91 Indonesia         ID 2019-12-20 2020-04-01 -001-11-30\n                         geometry\n1  MULTIPOLYGON (((833108.1 93...\n2  MULTIPOLYGON (((680501.1 98...\n3  MULTIPOLYGON (((1164841 929...\n4  MULTIPOLYGON (((664348.1 95...\n5  MULTIPOLYGON (((621453.9 95...\n6  MULTIPOLYGON (((251837.6 96...\n7  MULTIPOLYGON (((645554.4 96...\n8  MULTIPOLYGON (((1124342 972...\n9  MULTIPOLYGON (((933136.6 95...\n10 MULTIPOLYGON (((267868.9 95...\n```\n\n\n:::\n:::\n\n\n\n\nAs required, `admin2_study` is a sf polygon data.frame. It has 42 features.\n\nWe verify that all the geometries in `admin2_study` are valid.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(which(st_is_valid(admin2_study) == TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42\n```\n\n\n:::\n:::\n\n\n\n\nWe visualise `admin2_study` using *plot()*.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(admin2_study)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can now save the `admin2_study` study area layer using *write_rds().*\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(admin2_study, \"data/rds/admin2_study.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n### 3.3 Preparing the armed conflict point events layer\n\n#### 3.3.1 Importing the data\n\nLastly, we import `2015-01-01-2024-06-30-Indonesia.csv`. This dataset provides location, date, and other attribute information on 6 types of armed conflict events in Indonesia occurring from 1 January 2015 to 30 June 2024. Since it is in csv format, we use the *read_csv()* function of **readr**, part of the **tidyverse**, to import it, and save it as an object named `points`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints <- read_csv(\"data/2015-01-01-2024-06-30-Indonesia.csv\")\n\nglimpse(points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 17,116\nColumns: 31\n$ event_id_cnty      <chr> \"IDN17267\", \"IDN17269\", \"IDN17293\", \"IDN17428\", \"ID…\n$ event_date         <chr> \"30 June 2024\", \"30 June 2024\", \"30 June 2024\", \"30…\n$ year               <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 202…\n$ time_precision     <dbl> 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ disorder_type      <chr> \"Political violence\", \"Demonstrations\", \"Demonstrat…\n$ event_type         <chr> \"Violence against civilians\", \"Protests\", \"Protests…\n$ sub_event_type     <chr> \"Attack\", \"Peaceful protest\", \"Peaceful protest\", \"…\n$ actor1             <chr> \"Military Forces of Indonesia (2014-)\", \"Protesters…\n$ assoc_actor_1      <chr> NA, \"AJI: Alliance of Independent Journalists; Jour…\n$ inter1             <chr> \"State forces\", \"Protesters\", \"Protesters\", \"Rebel …\n$ actor2             <chr> \"Civilians (Indonesia)\", NA, NA, NA, NA, \"Civilians…\n$ assoc_actor_2      <chr> \"TPNPB: West Papua National Liberation Army\", NA, N…\n$ inter2             <chr> \"Civilians\", NA, NA, NA, NA, \"Civilians\", NA, \"Stat…\n$ interaction        <chr> \"State forces-Civilians\", \"Protesters only\", \"Prote…\n$ civilian_targeting <chr> \"Civilian targeting\", NA, NA, NA, NA, \"Civilian tar…\n$ iso                <dbl> 360, 360, 360, 360, 360, 360, 360, 360, 360, 360, 3…\n$ region             <chr> \"Southeast Asia\", \"Southeast Asia\", \"Southeast Asia…\n$ country            <chr> \"Indonesia\", \"Indonesia\", \"Indonesia\", \"Indonesia\",…\n$ admin1             <chr> \"Central Papua\", \"Jakarta\", \"East Java\", \"West Java…\n$ admin2             <chr> \"Intan Jaya\", \"Central Jakarta\", \"Surabaya\", \"Bogor…\n$ admin3             <chr> \"Sugapa\", \"Gambir\", \"Genteng\", \"Central Bogor\", \"Re…\n$ location           <chr> \"Sugapa\", \"Jakarta - Central\", \"Surabaya\", \"Bogor\",…\n$ latitude           <dbl> -3.7430, -6.1806, -7.2492, -6.5944, -6.9222, 3.5833…\n$ longitude          <dbl> 137.0500, 106.8283, 112.7510, 106.7891, 107.6070, 9…\n$ geo_precision      <dbl> 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ source             <chr> \"Human Rights Monitor\", \"Kompas\", \"Tribunnews\", \"Ko…\n$ source_scale       <chr> \"Other\", \"National\", \"National\", \"National\", \"Natio…\n$ notes              <chr> \"On 30 June 2024, the Indonesian military forces ar…\n$ fatalities         <dbl> 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ tags               <chr> NA, \"crowd size=no report\", \"crowd size=no report\",…\n$ timestamp          <dbl> 1720552459, 1720552459, 1720552459, 1721769310, 172…\n```\n\n\n:::\n:::\n\n\n\n\nThe longitude and latitude fields capture the x- and y-coordinates of the data points respectively. They appear to be in the WGS 84 geographic coordinate system (in which latitudes range from -90 to 90 and longitudes range from 0 to 360).\n\nWe then convert `points` to an sf object.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints_sf <- st_as_sf(points, coords = c(\"longitude\",\"latitude\"), crs = 4326)\n\nst_geometry(points_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 95.2127 ymin: -10.7323 xmax: 140.8694 ymax: 5.8925\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n\n\n#### 3.3.2 Importing the data\n\nWe reproject `points_sf` in the DGN95 / UTM zone 53S coordinate system, and save the reprojected data as a new object `points_23883`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints_23883 <- st_transform(points_sf, crs = 23883)\n\nst_geometry(points_23883)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -4304403 ymin: 8787709 xmax: 1153416 ymax: 10846150\nProjected CRS: DGN95 / UTM zone 53S\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n\n\n#### 3.3.3 Selecting points in the study area\n\n`points_23883` provides information on armed conflict events throughout Indonesia, and the admin1 field contains the name of the province where each point event took place.\n\nHowever, unlike the administrative boundaries datasets, the source data here is continually updated. This means that both the original (pre-2022) and new (post-2022) province names are used. We use the *group_by()* and *summarize()* functions of **dplyr** to find all the provinces that are named in `points_23883`, and save them as a data.frame `provinces` .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovinces <- points_23883 %>% \n  group_by(admin1) %>%\n  summarize()\n```\n:::\n\n\n\n\nAs we can see in `provinces`, the 6 current provinces are all named (Central Papua, Highland Papua, Papua, South Papua, Southwest Papua and West Papua).\n\nWe create a vector containing these province names.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovincenames <- c(\"Central Papua\", \"Highland Papua\", \"Papua\", \"South Papua\", \"Southwest Papua\", \"West Papua\")\n```\n:::\n\n\n\n\nNext, we use *filter()* to extract only the armed conflict events that take place in these provinces from `points_23883`. In addition, we use *select()*, also part of **dplyr**, to retain only the fields containing the event date, event type, involved parties (actor 1 and actor 2), the province (admin 1) and regency/city (admin2) where the event occurred, the number of fatalities, notes about the event, and the point geometry, for each event.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints_study <- points_23883 %>%\n  filter(admin1 %in% provincenames) %>%\n  select(event_date, event_type, actor1, actor2, admin1, admin2, fatalities, notes, geometry)\n\npoints_study\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2942 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -23320.68 ymin: 9056317 xmax: 1153416 ymax: 9956392\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 2,942 × 9\n   event_date   event_type          actor1 actor2 admin1 admin2 fatalities notes\n   <chr>        <chr>               <chr>  <chr>  <chr>  <chr>       <dbl> <chr>\n 1 30 June 2024 Violence against c… Milit… Civil… Centr… Intan…          1 On 3…\n 2 29 June 2024 Strategic developm… Civil… <NA>   Centr… Puncak          0 Disp…\n 3 29 June 2024 Battles             TPNPB… Milit… Centr… Puncak          1 On 2…\n 4 28 June 2024 Protests            Prote… <NA>   Papua  Jayap…          0 On 2…\n 5 28 June 2024 Protests            Prote… <NA>   South… Sorong          0 On 2…\n 6 28 June 2024 Battles             TPNPB… Milit… Centr… Puncak          0 On 2…\n 7 27 June 2024 Protests            Prote… <NA>   South… South…          0 On 2…\n 8 27 June 2024 Protests            Prote… <NA>   Papua  Jayap…          0 On 2…\n 9 22 June 2024 Battles             Milit… TPNPB… South… Maybr…          0 On 2…\n10 22 June 2024 Protests            Prote… <NA>   Papua  Jayap…          0 On 2…\n# ℹ 2,932 more rows\n# ℹ 1 more variable: geometry <POINT [m]>\n```\n\n\n:::\n:::\n\n\n\n\nThere are 2942 features in the `points_study` sf point data.frame, corresponding to 2942 armed conflict point events.\n\nWe verify that the geometries of all the point events are valid.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(which(st_is_valid(points_study) == TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2942\n```\n\n\n:::\n:::\n\n\n\n\nWe can now save the `points_study` study area layer using *write_rds().*\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(points_study, \"data/rds/points_study.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n## 4.0 Interactive Point Map\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\ntm_shape(admin1_study) + \n  tm_polygons() +\n    tm_shape(points_study) + \n      tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n\n## 5.0 Time Series Graph\n\n## 6.0 Shiny UI\n\n### 6.1 Shiny UI for Interactive Point Map\n\n### 6.2 Shiny UI for Time Series Graph\n",
    "supporting": [
      "Take-home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}