{
  "hash": "ef61d88c5565d04762e60d2684180430",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 3\"\nauthor: \"Immanuel Leong\"\ndate: \"September 2, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# In-class Exercise 3: Spatial Point Patterns Analysis: spatstat methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spatstat, raster, tmap, tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `C:\\ImmanuelLeong\\IS415-Geospatial\\In-class_Ex\\In-class_Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\ImmanuelLeong\\IS415-Geospatial\\In-class_Ex\\In-class_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n## Issue 1: Installing mapstools\n\n**maptools** is retired and binary is removed from CRAN. However, we can download it from Posit Public Package Manager using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avoid maptools being repetitively installed every time the Quarto document is rendered\n\n#install.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n:::\n\n\n## Issue 2: Creating coastal outline\n\n*st_combine()* returns a single, combined geometry with no resolved boundaries; returned geometries may well be invalid\n\nIf y is missing, *st_union(x)* returns a single geometry with resolved boundaries, else the geometries for all unioned pairs of x\\[i\\] and y\\[j\\]\n\n*st_union()* is used to derive the coastal outline sf tibble data.frame, sg_sf.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- mpsz_sf %>%\n  st_union()\n\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsg_sf_combine <- mpsz_sf %>%\n  st_combine()\n\nplot(sg_sf_combine)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex03_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n## Issue 3: as.SpatialGridDataFrame.im()\n\nThe *as.SpatialGridDataFrame.im()* function can only be used if **maptools** is installed\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# gridded_kde_childcareSG_ad <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG_adaptive)\n\n# spplot(gridded_kde_childcareSG_ad)\n```\n:::\n\n\nAlternatively, we can use the *as()* function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# gridded_kde_childcareSG_ad <- as(kde_childcareSG_adaptive, \"SpatialGridDataFrame\")\n```\n:::\n\n\n## Geospatial Analytics for Social Good: Myanmar Armed Conflict Case Study\n\nImport ACLED data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- read_csv(\"data/ACLED_Myanmar.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(event_date = dmy(event_date))\n\nacled_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 55574 features and 29 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -207135 ymin: 1103500 xmax: 640934.5 ymax: 3067910\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 55,574 × 30\n   event_id_cnty event_date  year time_precision disorder_type        event_type\n * <chr>         <date>     <dbl>          <dbl> <chr>                <chr>     \n 1 MMR56099      2023-12-31  2023              1 Political violence   Explosion…\n 2 MMR56222      2023-12-31  2023              1 Political violence   Explosion…\n 3 MMR56370      2023-12-31  2023              1 Political violence   Battles   \n 4 MMR56376      2023-12-31  2023              1 Demonstrations       Protests  \n 5 MMR56380      2023-12-31  2023              1 Strategic developme… Strategic…\n 6 MMR56869      2023-12-31  2023              1 Strategic developme… Strategic…\n 7 MMR56871      2023-12-31  2023              1 Political violence   Battles   \n 8 MMR56873      2023-12-31  2023              1 Political violence   Explosion…\n 9 MMR56874      2023-12-31  2023              1 Political violence   Battles   \n10 MMR56876      2023-12-31  2023              1 Political violence   Violence …\n# ℹ 55,564 more rows\n# ℹ 24 more variables: sub_event_type <chr>, actor1 <chr>, assoc_actor_1 <chr>,\n#   inter1 <dbl>, actor2 <chr>, assoc_actor_2 <chr>, inter2 <dbl>,\n#   interaction <dbl>, civilian_targeting <chr>, iso <dbl>, region <chr>,\n#   country <chr>, admin1 <chr>, admin2 <chr>, admin3 <chr>, location <chr>,\n#   geo_precision <dbl>, source <chr>, source_scale <chr>, notes <chr>,\n#   fatalities <dbl>, tags <chr>, timestamp <dbl>, geometry <POINT [m]>\n```\n\n\n:::\n:::\n",
    "supporting": [
      "In-class_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}